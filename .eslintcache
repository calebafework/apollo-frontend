[{"/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/index.js":"1","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/App.js":"2","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/Header.js":"3","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/CommentList.js":"4","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/config/Routes.js":"5","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/CommentShow.js":"6","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/pages/Home.js":"7","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/pages/Comments.js":"8","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/pages/Comment.js":"9","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/models/comment.js":"10","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/Comment.js":"11","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/CreateComment.js":"12"},{"size":309,"mtime":1608079504104,"results":"13","hashOfConfig":"14"},{"size":277,"mtime":1608079257011,"results":"15","hashOfConfig":"14"},{"size":1100,"mtime":1608160240992,"results":"16","hashOfConfig":"14"},{"size":870,"mtime":1608145279662,"results":"17","hashOfConfig":"14"},{"size":405,"mtime":1608143344378,"results":"18","hashOfConfig":"14"},{"size":2013,"mtime":1608159090696,"results":"19","hashOfConfig":"14"},{"size":470,"mtime":1608154951597,"results":"20","hashOfConfig":"14"},{"size":233,"mtime":1608139660529,"results":"21","hashOfConfig":"14"},{"size":345,"mtime":1608140429256,"results":"22","hashOfConfig":"14"},{"size":1137,"mtime":1608154667679,"results":"23","hashOfConfig":"14"},{"size":168,"mtime":1608142238406,"results":"24","hashOfConfig":"14"},{"size":1470,"mtime":1608155393635,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vdnfeh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/index.js",[],["58","59"],"/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/App.js",["60"],"import './App.css';\nimport Header from './components/Header'\nimport CommentList from './components/CommentList'\nimport Routes from './config/Routes'\n\nfunction App() {\n  return (\n    <div className= \"App\">\n      <Header/>\n      { Routes }\n    </div>\n  );\n}\n\nexport default App;\n","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/Header.js",["61","62"],"/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/CommentList.js",["63"],"import React, { useState, useEffect }from 'react';\nimport Comment from './Comment'\nimport CommentModel from '../models/comment'\nimport commentList from './commentList.css'\n\nconst CommentList = () => {\n    const [comments, setComments] = useState([])\n\n    useEffect(()=>{\n        //fetch data\n        CommentModel.index().then((data)=>{\n            setComments(data)\n        })\n    },[])\n\n    const allComments = comments.map((comment, index)=> {\n        return (\n            <div className=\"commentList\">\n                <Comment\n                    key={ index }\n                    content = { comment.content }\n                />\n            </div>    \n        );\n    })\n    return (\n        <div>   \n            <h3>All Comments</h3>\n            { comments.length ? allComments : <h3>No comments to display</h3> }\n        </div>\n    )\n}\n\nexport default CommentList;\n","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/config/Routes.js",["64"],"import React from 'react'\nimport { Switch, Router, Route } from 'react-router-dom'\nimport Home from '../pages/Home'\nimport Comments from '../pages/Comments'\nimport Comment from '../pages/Comment'\n\nexport default(\n    <Switch>\n        <Route exact path='/' component={ Home }/>\n        <Route path='/comment' component={ Comment }/>\n        <Route path='/comments' component={ Comments }/>\n    </Switch>\n)\n","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/CommentShow.js",["65","66"],"import React, { useEffect, useState } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport CommentModel from \"../models/comment\"\n\nconst CommentShow = (props) => {\n    const [comment, setComment] = useState(null)\n    const [editMode, setEditMode] = useState(false)\n    \n    const location = useLocation()\n    \n    const getInfo = async() => {\n        const info = await CommentModel.show()\n        setComment(info)\n    }\n\n    useEffect(() => {\n        setComment(location.state.comment.content)\n        // getInfo()\n    },[])\n\n    const handleDelete = async() => {\n        const res = await CommentModel.delete(comment.id)\n        console.log(res)\n        props.history.push('/')\n    }\n    \n    const handleUpdate = async () => {\n        const res = await CommentModel.update(comment)\n        console.log(res)\n        getInfo()\n    }\n\n    if(!comment){\n        return null\n    }\n\n    const displayInfo = (\n        <div>\n            { comment ? <h4>{ comment }</h4> : <h4>No comment</h4>} \n        </div>\n    )\n\n    const handleChange = (e) =>{\n        setComment({\n            ...comment,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const editComment = () => {\n        if(editMode){\n            handleUpdate()\n        }\n        setEditMode(!editMode)\n    }\n\n    const editInfo = (\n        <div>Edit\n            <div>\n                <input \n                    type=\"text\"\n                    name=\"comment\"\n                    value={ comment.content}\n                    onChange= {handleChange}\n                />\n            </div>\n        </div>\n    )\n\n    return (\n        <div>\n            { editMode ? editInfo : displayInfo }\n                <div>           \n                    <button onClick={ handleDelete } className=\"deleteButton\">Delete</button>\n                    <button onClick={ editComment } className=\"editButton\">{ editMode ? \"Save Changes\" : \"Edit\" }</button>\n                </div>    \n        </div> \n    );\n}\n\nexport default CommentShow;\n","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/pages/Home.js",["67"],"import React from 'react';\nimport CommentShow from '../components/CommentShow';\nimport CreateComment from '../components/CreateComment';\n\nconst Home = (props) => {\n\n    return (\n        <div>\n            <h3>Taking it's name from the Olympian God of music, Apollo is a   </h3>\n            <h3>To use Apollo simply tell us, in a few sentences, how you're doing today.</h3>         \n            <CreateComment { ...props } />\n        </div>\n    );\n}\n\nexport default Home;\n","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/pages/Comments.js",[],"/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/pages/Comment.js",["68"],"import React from 'react'\nimport Comment from '../components/Comment'\nimport CommentShow from '../components/CommentShow';\n\nconst CommentPage = () => {\n\n    return (\n        <div>\n            <h3> Based off your input, Apollo has curated a playlist for you</h3>   \n            <CommentShow/>\n        </div>\n    );\n}\n\nexport default CommentPage;\n","/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/models/comment.js",[],"/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/Comment.js",[],"/home/caleb/Documents/GA/unit4/project4/Apollo/apollo-frontend/src/components/CreateComment.js",["69"],"import React, { Component } from 'react'\nimport CommentModel from '../models/comment'\nimport createComment from './createComment.css'\n\nclass CreateComment extends Component {\n    state = {\n        content: \"\",\n        completed: false\n    }\n    \n    handleSubmit = (event) => {\n        event.preventDefault()\n        CommentModel.create(this.state)\n        .then(data => {\n            this.props.history.push({\n                pathname: '/comment',\n                state: { comment: data }\n            })\n        })\n    }\n\n\n    handleChange = (event) => {\n        if (event.target.type !== 'text') {\n            this.setState({ completed: !this.state.completed })\n        }\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"form\">\n                <form onSubmit={ this.handleSubmit } >\n                    <div className=\"form-input\">\n                        {/* Controlled Input */}\n                        <input \n                        type=\"text\"\n                        name=\"content\"\n                        onChange={ this.handleChange }\n                        value={ this.state.content }\n                        className=\"inputForm\"\n                        />\n                    </div>\n                    <input type=\"submit\" value=\"Curate\" className=\"button\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default CreateComment;",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":19},{"ruleId":"74","severity":1,"message":"78","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"79","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":14},{"ruleId":"74","severity":1,"message":"80","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":19},{"ruleId":"74","severity":1,"message":"81","line":2,"column":18,"nodeType":"76","messageId":"77","endLine":2,"endColumn":24},{"ruleId":"74","severity":1,"message":"82","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":19,"column":7,"nodeType":"85","endLine":19,"endColumn":9,"suggestions":"86"},{"ruleId":"74","severity":1,"message":"87","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":19},{"ruleId":"74","severity":1,"message":"88","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":15},{"ruleId":"74","severity":1,"message":"89","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":21},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'CommentList' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Navbar' is defined but never used.","'commentList' is defined but never used.","'Router' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.comment.content'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'CommentShow' is defined but never used.","'Comment' is defined but never used.","'createComment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [location.state.comment.content]",{"range":"95","text":"96"},[547,549],"[location.state.comment.content]"]